--DROP TABLE axel_dept;

CREATE TABLE axel_dept (deptno NUMBER(2),dname  VARCHAR2(15),loc    VARCHAR2(15));
INSERT INTO axel_dept VALUES (10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO axel_dept VALUES (20, 'RESEARCH', 'DALLAS');
INSERT INTO axel_dept VALUES (30, 'SALES', 'CHICAGO');
INSERT INTO axel_dept VALUES (40, 'OPERATIONS', 'BOSTON');
COMMIT;


--DROP TABLE axel_usr;

CREATE TABLE axel_usr ( id INTEGER,  deptno  NUMBER(2), name varchar(50) );

INSERT INTO axel_usr VALUES (1, 10, 'AXEL');
INSERT INTO axel_usr VALUES (2, 10, 'PIERRICK');
INSERT INTO axel_usr VALUES (3, 20, 'MICHAEL');
INSERT INTO axel_usr VALUES (3, 80, 'STEPHANE');

COMMIT;

SELECT * from axel_usr;
SELECT * from axel_dept;

SELECT * from axel_dept;

CREATE TABLE axel_mix ( id INTEGER,  deptno  NUMBER(2), name varchar(50), deptno NUMBER(2),dname  VARCHAR2(15),loc    VARCHAR2(15) );
SELECT * from mix;

INSERT INTO axel_mix ( SELECT * FROM axel_usr, axel_dept WHERE axel_usr.deptno = axel_dept.deptno ) ;
INSERT INTO axel_mix ( SELECT 3 * axel_usr.id ,  axel_usr.deptno, axel_usr.name, axel_dept.deptno ,axel_dept.dname  ,axel_dept.loc FROM axel_usr, axel_dept WHERE axel_usr.deptno = axel_dept.deptno )





-- ok
SELECT * FROM AXEL_DEPT INNER JOIN AXEL_USR USING(DEPTNO)

SELECT * FROM AXEL_DEPT LEFT INNER JOIN AXEL_USR USING(DEPTNO)

SELECT * FROM AXEL_DEPT RIGHT INNER JOIN AXEL_USR USING(DEPTNO)

-- ok
SELECT * FROM AXEL_USR, AXEL_DEPT  WHERE AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO

-- ok
SELECT * FROM AXEL_USR INNER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO)

-- ok
SELECT * FROM AXEL_USR INNER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO > AXEL_DEPT.DEPTNO)


-- error
SELECT * FROM AXEL_USR OUTER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO)

-- ok
SELECT * FROM AXEL_USR LEFT OUTER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO)

-- ok
SELECT * FROM AXEL_USR RIGHT OUTER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO)

-- ok
SELECT * FROM AXEL_USR RIGHT OUTER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO)

-- ok
SELECT * FROM AXEL_USR LEFT OUTER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO)
WHERE ID > 2

-- ok
SELECT * FROM AXEL_USR LEFT OUTER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO AND ID_MANAGER = 7)

SELECT * FROM AXEL_USR LEFT OUTER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO)
WHERE ID_MANAGER = 7

SELECT * FROM AXEL_USR LEFT OUTER JOIN AXEL_DEPT ON(AXEL_USR.DEPTNO = AXEL_DEPT.DEPTNO)
ORDER BY ID

-- ok
SELECT * FROM AXEL_USR LEFT OUTER JOIN AXEL_DEPT USING(DEPTNO) ORDER BY ID

SELECT * FROM AXEL_USR LEFT RIGHT OUTER JOIN AXEL_DEPT USING(DEPTNO)  ORDER BY ID

SELECT * FROM AXEL_USR RIGHT OUTER JOIN AXEL_DEPT USING(DEPTNO) ORDER BY ID

SELECT * FROM AXEL_USR RIGHT LEFT OUTER JOIN AXEL_DEPT USING(DEPTNO) ORDER BY ID

SELECT * FROM AXEL_USR FULL OUTER JOIN AXEL_DEPT USING(DEPTNO) ORDER BY ID


-- ok
SELECT a.name, a.ID_MANAGER, b.name manager, d.dname
FROM
axel_usr a LEFT OUTER JOIN axel_usr b
ON (a.id_manager = b.id)
INNER JOIN axel_dept d
ON (a.deptno = d.deptno);


SELECT a.name, a.ID_MANAGER, b.name manager, d.dname
FROM axel_dept d,
axel_usr a LEFT OUTER JOIN axel_usr b
ON (a.id_manager = b.id)
WHERE a.deptno = d.deptno





INSERT INTO AXEL_MIX (
SELECT
u1.DEPTNO, u2.NAME, u1.ID, d.LOC, u1.NAME
FROM
 AXEL_USR u1 LEFT OUTER JOIN  AXEL_USR u2 ON(  u2.ID_MANAGER = u1.ID )
 INNER JOIN  AXEL_DEPT d ON(  d.DEPTNO = u1.DEPTNO )
)
 ;
SELECT * FROM axel_mix a;


DELETE FROM (
SELECT
u1.DEPTNO, u2.NAME, u1.ID, d.LOC, u1.NAME
FROM
 AXEL_USR u1 LEFT OUTER JOIN  AXEL_USR u2 ON(  u2.ID_MANAGER = u1.ID )
 INNER JOIN  AXEL_DEPT d ON(  d.DEPTNO = u1.DEPTNO )
)
WHERE ID = 6


CREATE TABLE AXEL_MIX (
  DEPTNO  INTEGER,
  DNAME   VARCHAR (15),
  ID      INTEGER,
  LOC     VARCHAR (15),
  NAME    VARCHAR (50)
 );

CREATE VIEW v AS
SELECT
u1.DEPTNO, u2.NAME, u1.ID, d.LOC
FROM
 AXEL_USR u1 LEFT OUTER JOIN  AXEL_USR u2 ON(  u2.ID_MANAGER = u1.ID )
 INNER JOIN  AXEL_DEPT d ON(  d.DEPTNO = u1.DEPTNO );


SELECT * FROM v ;


SELECT * FROM axel_mix a;DELETE AXEL_MIX m FROM
-- AXEL_MIX as m LEFT OUTER JOIN  AXEL_USR u1 ON(  m.ID = u1.ID )
AXEL_MIX m, AXEL_USR u1
WHERE
m.ID = u1.ID AND m.ID = 6;


DELETE AXEL_MIX m FROM
 AXEL_MIX as m LEFT OUTER JOIN  AXEL_USR u1 ON(  m.ID = u1.ID )
-- AXEL_MIX m, AXEL_USR u1
WHERE
m.ID = u1.ID AND m.ID = 6;

