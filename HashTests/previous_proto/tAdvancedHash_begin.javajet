<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.IConnection
        org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
		java.util.ArrayList
		org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.IMetadataColumn
		org.talend.core.model.process.IHashableInputConnections
		org.talend.core.model.process.IHashConfiguration
		org.talend.core.model.process.IHashableColumn
		org.talend.core.model.process.IMatchingMode
		java.util.HashSet
		java.util.Set
		org.talend.core.model.process.EConnectionType
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();


    List<IConnection> connections = (List<IConnection>) node.getIncomingConnections();
    List<IConnection> outConnections = (List<IConnection>) node.getOutgoingConnections();
    
    List<INode> graphicalNodes = (List<INode>) node.getProcess().getGraphicalNodes();
    
	if (connections != null && connections.size() > 0) {
        for (IConnection connection : connections) {
        	String connectionName = connection.getName();

   INode nodeSource = connection.getSource();
   
   INode validTarget = null;
   INode currentTarget = null;
   
      List<IConnection> outGraphicalConnections = (List<IConnection>) nodeSource.getOutgoingConnections(EConnectionType.FLOW_REF);
      for(IConnection outGraphicalConnection : outGraphicalConnections) {
       if(outGraphicalConnection.getUniqueName().equals(connection.getUniqueName())) {
        currentTarget = outGraphicalConnection.getTarget();
       }
      }

			if(!(currentTarget instanceof IHashableInputConnections)) {
				currentTarget = currentTarget.getExternalNode();
			}
			if(currentTarget instanceof IHashableInputConnections) {
				validTarget = currentTarget;
			}

			// System.out.println(connectionName + " ######## " + validTarget + " " + validTarget.getClass());

			if(validTarget != null) {
					IHashableInputConnections target = (IHashableInputConnections) validTarget;
					IHashConfiguration hashConfiguration = target.getHashConfiguration(connection.getName());
					List<IHashableColumn> hashableColumns = null;
					IMatchingMode matchingMode = null;
					if(hashConfiguration == null) {
						hashableColumns = new ArrayList(0);
					} else {
						hashableColumns = hashConfiguration.getHashableColumns();
						matchingMode = hashConfiguration.getMatchingMode();
					}
					
					String matchingModeStr = null;
					if(matchingMode == null) {
						if(hashableColumns.size() > 0) {
							matchingModeStr = "UNIQUE_MATCH";
						} else {
							matchingModeStr = "ALL_ROWS";
						}
					} else {
						matchingModeStr = matchingMode.toString();
					}
					
			   %>
			   		org.talend.designer.components.commons.AdvancedLookup.MATCHING_MODE matchingModeEnum_<%=connectionName%> = 
			   			org.talend.designer.components.commons.AdvancedLookup.MATCHING_MODE.<%= matchingModeStr %>;
	   			org.talend.designer.components.commons.AdvancedLookup<<%=connectionName%>Struct> tHash_Lookup_<%=connectionName%> = 
	   				
	   				//org.talend.designer.components.commons.AdvancedLookup.
	   				//	<<%=connectionName%>Struct>getLookup(matchingModeEnum_<%=connectionName%>);
	   				new org.talend.designer.components.thash.io.hashimpl.PersistentAdvancedLookup<<%=connectionName%>Struct>(matchingModeEnum_<%=connectionName%>, false, false);
	   				
	   				tHash_Lookup_<%=connectionName%>.initPut();
	   				
   	   	   globalMap.put("tHash_Lookup_<%=connectionName%>", tHash_Lookup_<%=connectionName%>);
				<%
			} else { 
				// System.out.println(connectionName + " ######## Valid target not found" );
			}
		}
	}

%>
            
