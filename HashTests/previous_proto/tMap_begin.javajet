<%@ jet 
	imports="
	java.util.ArrayList
	java.util.List
	java.util.Map
	java.util.HashMap
	org.talend.core.model.metadata.MetadataTalendType
	org.talend.designer.mapper.MapperMain
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.designer.mapper.MapperComponent
	org.talend.designer.mapper.external.data.ExternalMapperData 
	org.talend.designer.mapper.external.data.ExternalMapperTable
	org.talend.designer.mapper.external.data.ExternalMapperTableEntry
	org.talend.core.model.process.IConnection
	org.talend.designer.mapper.language.ILanguage
	org.talend.designer.mapper.language.generation.GenerationManagerFactory
	org.talend.designer.mapper.language.generation.JavaGenerationManager
	org.talend.designer.mapper.language.LanguageProvider
	org.talend.core.model.metadata.types.JavaTypesManager
	" 
%>

<%

	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	MapperComponent node = (MapperComponent) codeGenArgument.getArgument();
	boolean stats = codeGenArgument.isStatistics();
	
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        ExternalMapperData data = (ExternalMapperData) node.getExternalData();
        List<ExternalMapperTable> varsTables = data.getVarsTables();
        ILanguage currentLanguage = LanguageProvider.getJavaLanguage();
        JavaGenerationManager gm = (JavaGenerationManager) GenerationManagerFactory.getInstance().getGenerationManager(currentLanguage);

%>
// ###############################
// # Lookup's keys initialization<%

        List<IConnection> inputConnections = (List<IConnection>) node.getIncomingConnections();

        HashMap<String, IConnection> hNameToConnection = new HashMap<String, IConnection>();
        for (IConnection connection : inputConnections) {
            hNameToConnection.put(connection.getName(), connection);
        }

        List<ExternalMapperTable> inputTablesList = new ArrayList<ExternalMapperTable>(data.getInputTables());
        int lstSizeInputs = inputTablesList.size();
        for (int i = 1; i < lstSizeInputs; i++) {
            ExternalMapperTable inputTable = (ExternalMapperTable) inputTablesList.get(i);
            String tableName = inputTable.getName();
            IConnection connection = hNameToConnection.get(tableName);
            if (connection == null) {
                continue;
            }
            List<ExternalMapperTableEntry> tableEntries = inputTable.getMetadataTableEntries();
            if (tableEntries == null) {
                continue;
            }
            String className = tableName + "Struct";
%>

org.talend.designer.components.commons.AdvancedLookup<<%=tableName%>Struct> tHash_Lookup_<%=tableName%> = (org.talend.designer.components.commons.AdvancedLookup<<%=tableName%>Struct>) globalMap.get( "tHash_Lookup_<%=tableName%>" );
<%=className%> <%=tableName%>HashKey = new <%=className%>();
<%=className%> <%=tableName%>Default = new <%=className%>();
<%
        }
%>
// ###############################        

// ###############################
// # Vars initialization
<%

        /////////////////////////////////////////////////////////////////////////
        gm.setVarsTables(varsTables);

        List<ExternalMapperTable> varTablesList = new ArrayList<ExternalMapperTable>(varsTables);

        // constants
        for (ExternalMapperTable table : varTablesList) {
            List<ExternalMapperTableEntry> tableEntries = table.getMetadataTableEntries();
            if (tableEntries == null) {
                continue;
            }
            String tableName = table.getName();
            
            String instanceVarName = tableName + "__" + node.getUniqueName();
            String className = instanceVarName + "__Struct";
            
%>
class  <%=className%>  {

<%
            int lstSize = tableEntries.size();
            for (int i = 0; i < lstSize; i++) {
                ExternalMapperTableEntry varTableEntry = (ExternalMapperTableEntry) tableEntries.get(i);
                String javaType = varTableEntry.getType();

%>	<%= JavaTypesManager.getTypeToGenerate(javaType, varTableEntry.isNullable()) %> <%= varTableEntry.getName() %>;

<%
            }
%>}
<%= className %> <%= instanceVarName %> = new <%= className %>();
<%
        }
%>
// ###############################

// ###############################
// # Outputs initialization
<%

		  List<IConnection> outputConnections = (List<IConnection>) node.getOutgoingConnections();
		  Map<String, IConnection> nameToOutputConnection = new HashMap<String, IConnection>();
        for (IConnection connection : outputConnections) {
		  		nameToOutputConnection.put(connection.getName(), connection);
		  }

        List<ExternalMapperTable> outputTablesList = new ArrayList<ExternalMapperTable>(data.getOutputTables());
        // constants
        for (ExternalMapperTable table : outputTablesList) {
        
            List<ExternalMapperTableEntry> tableEntries = table.getMetadataTableEntries();
            if (tableEntries == null || nameToOutputConnection.get(table.getName()) == null) {
                continue;
            }
            String tableName = table.getName();
            
            String instanceVarName = tableName + "__" + node.getUniqueName();
            String className = tableName + "Struct";
            
%>
<%= className %> <%= tableName %>_tmp = new <%= className %>();
<%
        }
%>
// ###############################


org.talend.designer.components.thash.io.hashimpl.FlowSorterIterator fsi = new org.talend.designer.components.thash.io.hashimpl.FlowSorterIterator();
fsi.initPut(null);



<%


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

%>
