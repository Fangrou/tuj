<project name="testng" default="run" basedir=".">
	<taskdef resource="cargo.tasks">
	  <classpath>
	  	<path>
	  		<fileset dir="${hudson.selenium.libs}" id="cargo.libs">
			    <include name="*.jar"/>
			</fileset>
	  	</path>
	  	<!--
	    <pathelement location="${cargo-uberjar}"/>
	    <pathelement location="${cargo-antjar}"/>
	    -->
	  </classpath>
	</taskdef>

	<!-- check os -->
    <target name="os">
    	<condition property="is.unix">
    		<os family="unix"/>
    	</condition>
    	<condition property="is.windows">
    		<os family="windows"/>
    	</condition>
    	
    	<echo>
    		os.name=${os.name}
    		os.arch=${os.arch}
    		os.version=${os.version}
    		
    		is.unix=${is.unix}
    		is.windows=${is.windows}
    	</echo>
    </target>
	
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: launch-soamanager                      
         - - - - - - - - - - - - - - - - - -->
    <target name="launch-soamanager">
        <java jar="${product.target.home}${file.separator}soamanager-r${build.version}.jar"
        	fork="true" spawn="true">
        	<arg value="${soa.managerserverport}"/>
        </java>
 		<echo>
     		Launch soamanager --soamanager-r${build.version}.jar!
     	</echo>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: stop-soamanager                      
         - - - - - - - - - - - - - - - - - -->
    <target name="stop-soamanager">
    	<java jar="${hudson.selenium.libs}${file.separator}telnet.jar"
    		fork="true" spawn="true">
	    		<arg value="${soa.managerserveraddress}"/>
	    		<arg value="${soa.managerserverport}"/>
	    		<arg value="stop"/>
    	</java>
    </target>

	
	<!-- - - - - - - - - - - - - - - - - - 
          target: launch-commandline-windows                      
         - - - - - - - - - - - - - - - - - -->
    <target name="stop-commandlines">
		<antcall target="stop-commandline">
			<param name="commandline.port" value="${commandLine.conf.port}"/>
			<param name="commandline.ip" value="${commandLine.conf.host}"/>
		</antcall>
		<antcall target="stop-commandline">
			<param name="commandline.port" value="${commandLine.secondary.conf.port}"/>
			<param name="commandline.ip" value="${commandLine.secondary.conf.host}"/>
		</antcall>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: launch-commandline-linux                      
         - - - - - - - - - - - - - - - - - -->
    <target name="launch-commandline-linux" depends="os" if="is.unix">
    	<echo> ${product.target.home}${file.separator}Talend-All-r${build.version}-V${release.version} </echo>
    	
		<exec executable="sh" dir="${talend-all.home}"
			spawn="true">
			<arg value="-c"/>
			<arg value="chmod +x Talend-linux-gtk-x86"/>
		</exec>
    	
		<exec executable="sh" dir="${talend-all.home}"
			spawn="true">
			<arg value="-c"/>
			<arg value="sh ${commandline.launcher}"/>
		</exec>
    </target>
			
	<!-- - - - - - - - - - - - - - - - - - 
          target: launch-commandline-windows                      
         - - - - - - - - - - - - - - - - - -->
    <target name="launch-commandline-windows" depends="os" if="is.windows">
		<exec executable="cmd" dir="${talend-all.home}"
			spawn="true">
				<arg value="/c"/>
				<arg value="${commandline.launcher}"/>
		</exec>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: stop-commandline                      
         - - - - - - - - - - - - - - - - - -->
    <target name="stop-commandline">
    	<java jar="${hudson.selenium.libs}${file.separator}telnet.jar"
    		dir="${talend-all.home}"
    		fork="true" spawn="true">
	    		<arg value="${commandline.ip}"/>
	    		<arg value="${commandline.port}"/>
	    		<arg value="stopServer"/>
    	</java>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: launch-jobserver-windows                     
         - - - - - - - - - - - - - - - - - -->
    <target name="launch-jobserver-windows" depends="os" if="is.windows">
		<exec executable="cmd" dir="${jobserver.home}"
			spawn="true">
			<arg value="/c"/>
			<arg value="start_rs.bat"/>
		</exec>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: stop-jobserver-windows                      
         - - - - - - - - - - - - - - - - - -->
    <target name="stop-jobserver-windows" depends="os" if="is.windows">
		<exec executable="cmd" dir="${jobserver.home}"
			spawn="true">
			<arg value="/c"/>
			<arg value="stop_rs.bat"/>
		</exec>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: launch-jobserver-linux                     
         - - - - - - - - - - - - - - - - - -->
    <target name="launch-jobserver-linux" depends="os" if="is.unix">
    	<echo>${product.target.home}${file.separator}org.talend.remote.jobserver_${release.version}_r${build.version}</echo>
		<exec executable="sh" dir="${jobserver.home}"
			spawn="true">
			<arg value="-c"/>
			<arg value="sh start_rs.sh"/>
		</exec>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: stop-jobserver-linux                      
         - - - - - - - - - - - - - - - - - -->
    <target name="stop-jobserver-linux" depends="os" if="is.unix">
		<exec executable="sh" dir="${jobserver.home}"
			spawn="true">
			<arg value="-c"/>
			<arg value="stop_rs.sh"/>
		</exec>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: start-tomcat                      
         - - - - - - - - - - - - - - - - - -->
    <target name="start-tomcat">
    	<delete dir="${cargo.home}"/>
    	<mkdir dir="${cargo.tomcat.dir}"/>
    	<mkdir dir="${cargo.logs}"/>
    	
		<cargo containerId="tomcat6x" home="${tomcat.home}" output="${cargo.logs}/tomcat-output.log" log="${cargo.logs}/cargo.log" action="start" wait="false">
			<configuration home="${cargo.tomcat.dir}">
				<property name="cargo.hostname" value="${tomcat.host}"/>
				<property name="cargo.servlet.port" value="${tomcat.port}"/>
				<property name="cargo.tomcat.ajp.port" value="${tomcat.ajp.port}"/>
				<property name="cargo.logging" value="high"/>
				<property name="cargo.jvmargs" value="${tomcat.jvm}"/>
				<deployable type="war" file="${tac.home}/org.talend.administrator.war"/>
			</configuration>
		</cargo>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: stop-tomcat                      
	- - - - - - - - - - - - - - - - - -->
	<target name="stop-tomcat">  
		<cargo containerId="tomcat6x" home="${tomcat.home}" action="stop">
				<configuration home="${cargo}/configuration">
				    <property name="cargo.servlet.port" value="${tomcat.port}"/>
					<property name="cargo.tomcat.ajp.port" value="${tomcat.ajp.port}"/>
				</configuration>
		</cargo>
	</target>  
    	
	<!-- - - - - - - - - - - - - - - - - - 
          target: start-selenium                      
         - - - - - - - - - - - - - - - - - -->
	<target name="start-selenium" description="starts selenium server">
		<echo>Starting selenium server</echo>
			<java jar="${hudson.selenium.libs}/selenium-server.jar" 
				fork="true" spawn="true">
					<arg line="-port ${selenium.port}"/>
	       			<arg value="-firefoxProfileTemplate"/>
	       			<arg value="${selenium.target}/src/main/java/org/talend/tac/folder/downloads"/>
					<!--output="selenium.log" -->
	    </java>
	</target>
	<!-- - - - - - - - - - - - - - - - - - 
          target: stop-selenium                      
         - - - - - - - - - - - - - - - - - -->		 
	<target name="stop-selenium" description="stop selenium server">
		<echo>Stopping selenium server</echo>
		<get taskname="selenium-shutdown" dest="selenium.stop.log" ignoreerrors="true"
			src="http://${selenium.server}:${selenium.port}/selenium-server/driver/?cmd=shutDownSeleniumServer"/>
	</target>
    
	
	<!-- ================================= 
          target: launch-server              
         ================================= -->
    <target name="launch-servers"
    	description="launch servers for testing">
    	
        <antcall target="start-tomcat"/>
    	
    	<antcall target="start-selenium"/>
    	<if>
    		<isset property="product-soamanager-available"/>
    		<then>
    			<antcall target="launch-soamanager"/>
    		</then>
    		<else>
    			<echo>product-soamanager-available not available! Can not start server</echo>
    		</else>
    	</if>
    	
    	<if>
    		<isset property="product-talend-all-available"/>
    		<then>
    			<antcall target="launch-commandline-windows">
    				<param name="commandline.launcher" value="commandline_${commandline.one.append}.bat"/>
    			</antcall>
    			<antcall target="launch-commandline-windows">
    				<param name="commandline.launcher" value="commandline_${commandline.two.append}.bat"/>
    			</antcall>
    			
    			<antcall target="launch-commandline-linux">
    				<param name="commandline.launcher" value="commandline_${commandline.one.append}.sh"/>
    			</antcall>
    			<antcall target="launch-commandline-linux">
    				<param name="commandline.launcher" value="commandline_${commandline.two.append}.sh"/>
    			</antcall>    			
    		</then>
    		<else>
    			<echo>product-talend-all-available not available! Can not start server</echo>
    		</else>
    	</if>
    	
    	<if>
    		<isset property="product-jobserver-available"/>
    		<then>
    	        <antcall target="launch-jobserver-windows"/>
    	    	<antcall target="launch-jobserver-linux"/>
    		</then>
    		<else>
    			<echo>product-jobserver-available not available! Can not start server</echo>
    		</else>
    	</if>
    </target>
	
	<!-- ================================= 
          target: stop-servers-linux              
         ================================= -->
    <target name="stop-servers-linux" depends="os" if="is.unix">
		<exec executable="sh" dir="${hudson.selenium.scripts}"
			spawn="true">
			<arg value="-c"/>
			<arg value="sh kill-all.sh bootstrap selenium-server soamanager jobserver commandline"/>
		</exec>
    </target>
	
    <target name="stop-servers">
    	<echo>soa -${product-soamanager-available}</echo>
        <antcall target="stop-tomcat"/>
    	<antcall target="stop-selenium"/>
    	
    	<if>
    		<isset property="product-soamanager-available"/>
    		<then>
    			<antcall target="stop-soamanager"/>
    		</then>
    		<else>
    			<echo>product-soamanager-available not available! Can not stop server</echo>
    		</else>
    	</if>
    	
    	<if>
    		<isset property="product-talend-all-available"/>
    		<then>
    			<antcall target="stop-commandlines"/>
    		</then>
    		<else>
    			<echo>product-talend-all-available not available! Can not stop server</echo>
    		</else>   		
    	</if>
    	
    	<if>
    		<isset property="product-jobserver-available"/>
    		<then>
    	        <antcall target="stop-jobserver-windows"/>
    	    	<antcall target="stop-jobserver-linux"/>
    		</then>
    		<else>
    			<echo>product-jobserver-available not available! Can not stop server</echo>
    		</else>    		
    	</if>
    	
    	<antcall target="stop-servers-linux"/>
    </target>
	
	

	<target name="run">
		<antcall target="stop-servers"/>
		<antcall target="launch-servers"/>
	</target>
</project>


