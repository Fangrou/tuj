<project name="testng" default="modify" basedir=".">

	<target name="modify_xmls">  
		<echo>modify_xmls -- ${selenium.target}</echo>
		<foreach list="${functions.list.tac}"
			target="modify.xml" param="conf" delimiter=",">
			<param name="selenium.target" value="${selenium.target}"/>
		</foreach>  
	</target> 
	
	<target name="modify_run_xmls">  
		<foreach list="${functions.list.tac.run}"
			target="modify.run.xml" param="conf" delimiter=",">
			<param name="selenium.target" value="${selenium.target}"/>
		</foreach>  
	</target> 
	
    <target name="modify.xml">
    	<echo>${conf}</echo>
    	<echo>modify.xml -- ${selenium.target}</echo>
    	<replaceregexp file="${selenium.target}/src/main/java/${xmlfile}.xml" 
    		match="suite-file path='org/talend/tac/conf/${conf}.xml'/" 
    		replace="!--suite-file path='org/talend/tac/conf/${conf}.xml'/--" 
    		byline="true">
    	</replaceregexp>	
    </target>
	
    <target name="modify.run.xml">
    	<echo>${conf}</echo>
    	<replaceregexp file="${selenium.target}/src/main/java/${xmlfile}.xml" 
    		match="!--suite-file path='org/talend/tac/conf/${conf}.xml'/--" 
    		replace="suite-file path='org/talend/tac/conf/${conf}.xml'/" 
    		byline="true">
    	</replaceregexp>	
    </target>
	
    <target name="remove-suite">
    	<echo>Remove tests of ${suite}!</echo>
    	<replaceregexp file="${selenium.target}/src/main/java/${xmlfile}.xml" 
    		match=".*suite-file path='org/talend/tac/conf/${suite}.xml.*" 
    		replace="" 
    		byline="true">
    	</replaceregexp>	
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: modify-configration-file                      
         - - - - - - - - - - - - - - - - - -->
    <target name="modify-configration-file">
		<!-- modify the configuration files to run tests -->
		<antcall target="modify_xmls"/>
		<antcall target="modify_run_xmls"/>
    </target>
	
    <target name="configuration-primary-commandline">
    	<echo>configuration-primary-commandline</echo>
    	<replaceregexp file="${administrator.configuration.file}" 
    		match="config.primary.commandLine,config.commandLine.host,(.*),true" 
    		replace="config.primary.commandLine,config.commandLine.host,${commandline.one.ip},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"  
    		match="config.primary.commandLine,config.commandLine.port,(.*),true" 
    		replace="config.primary.commandLine,config.commandLine.port,${commandline.one.port},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"  
    		match="config.primary.commandLine,config.commandLine.archivePath,(.*),null" 
    		replace="config.primary.commandLine,config.commandLine.archivePath,${selenium.folder.home}/commandline,null" 
    		byline="true">
    	</replaceregexp> 
    </target>
	
    <target name="configuration-second-commandline">
    	<echo>configuration-second-commandline</echo>
    	<replaceregexp file="${administrator.configuration.file}" 
    		match="config.secondary.commandLine,config.commandLine.host,(.*),true" 
    		replace="config.secondary.commandLine,config.commandLine.host,${commandline.two.ip},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"  
    		match="config.secondary.commandLine,config.commandLine.port,(.*),true" 
    		replace="config.secondary.commandLine,config.commandLine.port,${commandline.two.port},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"  
    		match="config.secondary.commandLine,config.commandLine.archivePath,(.*),null" 
    		replace="config.secondary.commandLine,config.commandLine.archivePath,${selenium.folder.home}/secondcommandline,null" 
    		byline="true">
    	</replaceregexp> 
    </target>
	
    <target name="configuration-database">
    	<echo>configuration-database</echo>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.database,config.database.url,jdbc:h2:(.*)/webapps/org.talend.administrator/WEB-INF/database/talend_administrator;AUTO_SERVER=TRUE;MVCC=TRUE,true" 
    		replace="config.database,config.database.url,jdbc:h2:${tomcat.home}/webapps/org.talend.administrator/WEB-INF/database/talend_administrator;AUTO_SERVER=TRUE;MVCC=TRUE,true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"  
    		match="config.database,config.database.user,(.*),true" 
    		replace="config.database,config.database.user,${h2.database.user},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"  
    		match="config.database,config.database.password,(.*),true" 
    		replace="config.database,config.database.password,${h2.database.password},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"  
    		match="config.database,config.database.link,(.*),true" 
    		replace="config.database,config.database.link,&lt;a href='${tomcat.url}/org.talend.administrator/h2console' target='_blank\'&gt;${tomcat.url}/org.talend.administrator/h2console&lt;/a&gt;,true" 
    		byline="true">
    		
    	</replaceregexp> 
    </target>
	
    <target name="configuration-log4j">
    	<echo>configuration-log4j</echo>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.log4j,config.log4j.talendAppender,(.*),true" 
    		replace="config.log4j,config.log4j.talendAppender,${selenium.target}/${selenium.file.folder}/talendappender.log,true" 
    		byline="true">
    	</replaceregexp>
    </target>
	
    <target name="configuration-svn">
    	<echo>configuration-svn</echo>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.svn,config.svn.serverLocationUrl,(.*),true" 
    		replace="config.svn,config.svn.serverLocationUrl,${test.svn.url},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.svn,config.svn.username,(.*),true" 
    		replace="config.svn,config.svn.username,${test.svn.username},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.svn,config.svn.password,(.*),true" 
    		replace="config.svn,config.svn.password,${test.svn.password},true" 
    		byline="true">
    	</replaceregexp>
    </target>
    
    <target name="configuration-soa">
    	<echo>configuration-soa</echo>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.soaManager,config.soaManager.jobsDeployFolder,(.*),true" 
    		replace="config.soaManager,config.soaManager.jobsDeployFolder,${selenium.folder.home}/soa,true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.soaManager,config.soaManager.defaultServiceNameSpace,(.*),null" 
    		replace="config.soaManager,config.soaManager.defaultServiceNameSpace,${soamanager.namespace},null" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.soaManager,config.soaManager.host,(.*),true" 
    		replace="config.soaManager,config.soaManager.host,${soamanager.ip},true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.soaManager,config.soaManager.port,(.*),true" 
    		replace="config.soaManager,config.soaManager.port,8004,true" 
    		byline="true">
    	</replaceregexp>
    	
    </target>

    <target name="configuration-scheduler">
    	<echo>configuration-scheduler</echo>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.scheduler,config.scheduler.archiveAndExecutionLogsPath,(.*),true" 
    		replace="config.scheduler,config.scheduler.archiveAndExecutionLogsPath,${selenium.folder.home}/archiveJobs,true" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.scheduler,config.scheduler.recoveryLogsPath,(.*),true" 
    		replace="config.scheduler,config.scheduler.recoveryLogsPath,${selenium.folder.home}/executionLogs,true" 
    		byline="true">
    	</replaceregexp>
    </target>
	
    <target name="configuration-general">
    	<echo>configuration-general</echo>
    	<replaceregexp file="${administrator.configuration.file}" 
    		match="config.general,config.general.webAppVersion,(.*),null" 
    		replace="config.general,config.general.webAppVersion,${release.version}.${build.version},null" 
    		byline="true">
    	</replaceregexp>
    	<replaceregexp file="${administrator.configuration.file}"  
    		match="config.general,config.general.dbModelVersion,(.*),null" 
    		replace="config.general,config.general.dbModelVersion,${release.version}.${build.version},null" 
    		byline="true">
    	</replaceregexp> 
    	<replaceregexp file="${administrator.configuration.file}"
    		match="config.general,config.general.location,(.*),true" 
    		replace="config.general,config.general.location,${tomcat.url}/org.talend.administrator,true" 
    		byline="true">
    	</replaceregexp>
    </target>
	

	
    <target name="modify-administrator-configuration">
    	<echo> -- ${selenium.target}
    	- ${administrator.configuration.file}
    	</echo>
		<antcall target="configuration-primary-commandline"/>
		<antcall target="configuration-second-commandline"/>
		<antcall target="configuration-database"/>
		<antcall target="configuration-log4j"/>
		<antcall target="configuration-svn"/>
		<antcall target="configuration-soa"/>
		<antcall target="configuration-scheduler"/>
		<antcall target="configuration-general"/>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: modify-products-run-tests                      
         - - - - - - - - - - - - - - - - - -->
    <target name="modify-products-run-tests">
    	<if>
    		<not>
    			<isset property="product-soamanager-available"/>
    		</not>
    		<then>
    	    	<echo>There is no product of soamanager!</echo>
    			<foreach list="${remove.suites.soa.unavaliable}"
    				target="remove-suite" param="suite" delimiter=",">
    				<param name="selenium.target" value="${selenium.target}"/>
    			</foreach> 
    		</then>
    		<else>
    			<echo>product-soamanager-available ---------</echo>
    		</else>
    	</if>
    	
    	
    	<if>
    		<not>
    			<isset property="product-talend-all-available"/>
    		</not>
    		<then>
    	    	<echo>There is no product of talend-all!</echo>
    			<foreach list="${remove.suites.commandline.unavaliable}"
    				target="remove-suite" param="suite" delimiter=",">
    				<param name="selenium.target" value="${selenium.target}"/>
    			</foreach> 
    		</then>
    		<else>
    			<echo>product-talend-all-available ---------</echo>
    		</else>
    	</if>
    	
    	<if>
    		<not>
    			<isset property="product-jobserver-available"/>
    		</not>
    		<then>
    	    	<echo>There is no product of jobserver!</echo>
    			<foreach list="${remove.suites.jobserver.unavaliable}"
    				target="remove-suite" param="suite" delimiter=",">
    				<param name="selenium.target" value="${selenium.target}"/>
    			</foreach> 
    		</then>
    		<else>
    			<echo>product-jobserver-available ---------</echo>
    		</else>
    	</if>
    	
    	<if>
    		<!--
    		<isset property="test.on.database"/>
    		-->
    		<equals arg1="${test.on.database}" arg2="true" />
    		<then>
    	    	<echo>Do not test license!</echo>
    			<antcall target="remove-suite">
    				<param name="suite" value="license"/>
    				<param name="selenium.target" value="${selenium.target}"/>
    			</antcall>
    		</then>
    		<else>
    			<echo>Test License!</echo>
    		</else>
    	</if>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: modify                      
         - - - - - - - - - - - - - - - - - -->
    <target name="modify">
    	<echo>--Modify-administrator-configuration--</echo>
    	<echo>- ${selenium.target}
    	-${administrator.configuration.file}
    	</echo>
    	<antcall target="modify-administrator-configuration"/>
    	
    	<antcall target="modify-configration-file"/>
    	<antcall target="modify-products-run-tests"/>
    </target>
    	
</project>
