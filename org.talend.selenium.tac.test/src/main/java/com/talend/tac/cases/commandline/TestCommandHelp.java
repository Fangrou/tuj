package com.talend.tac.cases.commandline;

import org.testng.Assert;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;


public class TestCommandHelp extends Commandline {
    
	@Test
	@Parameters({"commandHelp"})
	public void testCommandHelp(String help) {
		
		String expectedResult = "talend>TalendCommandlinePlugin:*argumentscanbesurroundedby()or()characters*thesemicolon()charactercanbeusedtoseparatecommandsfromeachother*specialcharacters(space)canbeescapedusingthecharacter()Usage:[cancelGroupchangeStatus<newStatusCode>dif<filterExpr>changeVersion<newVersion(x.xnextMajornextMinor)>flvdif<filterExpr>checkAndUpdatetu<user>tup<password>createJob<jobName>sf<filepath>ocreateProjectpn<technicalname>pd<description>pl<language(java/perl)>pa<authorlogin>pap<password>createTask<taskName>pn<projectname>d<description>ab<branchname>jn<jobname>jv<jobversion>jc<jobcontext>jactcrjcesn<executionserver>ouj<onunavailablejobserver>eseasceousj<unknownstatejob>deleteItemsif<filterExpr>deployJobToServer<jobName>es<name>jv<version>jc<contextname>jactcuseSSLun<username>pd<password>executeAllJobi<path>jc<contextname>jcp<key=value1>[<key=value2>...]jrdd<path>jt<time(insec)>jactcif<filterExpr>executeJob<jobName>i<path>jv<version>jc<contextname>jcp<key=value1>[<key=value2>...]jrdd<path>jt<time(insec)>jactcexecuteJobOnServer<jobName>es<name>jv<version>jc<contextname>jcp<key=value>jsp<port>jtp<port>jactcuseSSLun<username>pd<password>executeReportn<name>p<path>executeRoute<routeName>i<path>jv<version1>[<version2>...]jc<contextname>jcp<contextparam1>[<contextparam2>...]jrdd<path>jt<timeout>jactcexportAllJobdd<path>jc<contextname>jactcif<filterExpr>exportAsCWM<dbConnectionName>dd<path>exportItems<destination(dir.zip)>dif<filterExpr>exportJob<jobName>dd<path>jv<version>jc<contextname>af<filename>jactcjstatseoexportRoute<routeName>dd<path>jv<version>jc<contextname>af<filename>jactcjstatseogenerateAuditReport<auditId>fp<filePath>t<template>getCommandStatus<commandId>ci<index>help<commandName>helpFilterimportDatabaseMetadata<filePath>importDelimitedMetadata<filePath>importItems<source(dir.zip)>if<filterExpr>osslinitLocalinitRemote<adminUrl>javaProtocollistCommandaqrlistExecutionServerlistItemif<filterExpr>mlistJoblistProjectblogoffProjectlogonProjectpn<technicalname>ul<login>up<password>gtbr<branch>populateAuditju<jdbc_url>dd<driver>du<user>up<password>quitsetUserComponentPathup<path>cshowVersionstartGroupo<infor>stopGroupstopServerf]cancelGroupcancelcommandgroupchangeStatusnewStatusCodechangesitemsstatusd(dependencies)updatethedependenciesif(itemfilter)filterExpritemfilterexpressionchangeVersionnewVersion(x.xnextMajornextMinor)changesitemsversionflv(fixlatestversion)fixinglatestversiond(dependencies)updatethedependenciesif(itemfilter)filterExpritemfilterexpressioncheckAndUpdateupdatefromarchivaserverwhichreturndbyaspecificTACtu(tacusername)usernameofatacusertup(tacuserpassword)passwordpasswordofatacusercreateJobjobNamecreatejobfromscriptfilesf(script_file)filepathjobofscriptfileo(over_write)tooverwriteifjobexistedcreateProjectcreatesaprojectpn(projectname)technicalnameprojectnamepd(projectdescription)descriptionprojectdescriptionpl(projectlanguage)language(java/perl)projectlanguagepa(projectauthor)authorloginprojectauthor(email)pap(projectauthorpassword)passwordpasswordofauthorcreateTasktaskNamepn(projectname)projectnameprojectnamed(description)descriptionprojectdescriptiona(active)activeb(projectbranch)branchnameprojectbranchjn(jobname)jobnamejobnamejv(jobversion)jobversionjobversionjc(jobcontext)jobcontextjobcontextjactc(jobapplycontexttochildren)applycontexttochildrenrjc(regeneratejobonchange)regeneratejobonchangeesn(excutionserver)executionserverexecutionserverouj(onunavailablejobserver)onunavailablejobserverese(execStatisticsEnabled)statisticenableasce(addstatisticscodeenable)enabledstatisticscodeousj(onunknownstatejob)unknownstatejobprovidetheunknownstatejobdeleteItemsdeleteitemsif(itemfilter)filterExpritemfilterexpressiondeployJobToServerjobNameDeployjobtoserveres(executionserver)nameexecution[virtual]servernamejv(jobversion)versionchoosesajobversionjc(jobcontext)contextnamechoosesajobcontextjactc(jobapplycontexttochildren)applycontexttochildrenuseSSL(usessloption)usesslProtocolornotun(jobserverusername)usernamejobserverusernamepd(jobserverpassword)passwordjobserverpasswordexecuteAllJobexecutesalli(interpreter)pathperl/javainterpreterpathjc(jobcontext)contextnamechoosesajobcontextjcp(jobcontextparam)key=value[key=value...]providesajobcontextparamjrdd(jobresultdestinationdir)pathjobexecutionresultdestinationdirjt(jobtimeout)time(insec)timeoutofexecutionjactc(jobapplycontexttochildren)applycontexttochildrenif(itemfilter)filterExpritemfilterexpressionexecuteJobjobNameexecutesi(interpreter)pathperl/javainterpreterpathjv(jobversion)versionchoosesajobversionjc(jobcontext)contextnamechoosesajobcontextjcp(jobcontextparam)key=value[key=value...]providesajobcontextparamjrdd(jobresultdestinationdir)pathjobexecutionresultdestinationdirjt(jobtimeout)time(insec)timeoutofexecutionjactc(jobapplycontexttochildren)applycontexttochildrenexecuteJobOnServerjobNameexecutesonserveres(executionserver)nameexecution[virtual]servernamejv(jobversion)versionchoosesajobversionjc(jobcontext)contextnamechoosesajobcontextjcp(jobcontextparam)key=valueprovidesajobcontextparamjsp(jobstatisticsport)portsetupthestatisticsportjtp(jobtraceport)portsetupthetraceportjactc(jobapplycontexttochildren)applycontexttochildrenuseSSL(usessloption)usesslProtocolornotun(jobserverusername)usernamejobserverusernamepd(jobserverpassword)passwordjobserverpasswordexecuteReportExecutereportsn(name)nameReportnamesp(path)pathReportfilepathes(relativepath,e.g./Project/TDQ_DataProfiling/Reports/File).executeRouterouteNameexecuteRoutei(interpreter)pathperl/javainterpreterpathjv(jobversion)version[version...]choosesajobversionjc(jobcontext)contextnamechoosesajobcontextjcp(jobcontextpara)contextparam[contextparam...]providesajobcontextparamjrdd(jobresultdestinationdir)pathjobexecutionresultdestinationdirjt(jobtimeout)timeouttimeoutofexecutionjactc(jobapplycontexttochildren)applycontexttochildrenexportAllJobexportsalldd(destinationdirectory)pathdestinationdirectoryjc(jobcontext)contextnamechoosesajobcontextjactc(jobapplycontexttochildren)applycontexttochildrenif(itemfilter)filterExpritemfilterexpressionexportAsCWMdbConnectionNameexportadbmetadataasCWMdd(destinationdirectory)pathdestinationdirectoryexportItemsdestination(dir.zip)exportsitemsd(dependencies)includedependenciesif(itemfilter)filterExpritemfilterexpressionexportJobjobNameexportsdd(destinationdirectory)pathdestinationdirectoryjv(jobversion)versionchoosesajobversionjc(jobcontext)contextnamechoosesajobcontextaf(archivefilename)filenamearchivefilename(without.zip)jactc(jobapplycontexttochildren)applycontexttochildrenjstats(jobaddstatisticscode)generatewiththestatisticsinstructionseo(exportosgi)exportjobtoosgisystemexportRouterouteNameexportroutesdd(destinationdirectory)pathdestinationdirectoryjv(jobversion)versionchoosesajobversionjc(jobcontext)contextnamechoosesajobcontextaf(archivefilename)filenamearchivefilename(without.zip)jactc(jobapplycontexttochildren)applycontexttochildrenjstats(jobaddstatisticscode)generatewiththestatisticsinstructionseo(exportosgi)exportjobtoosgisystemgenerateAuditReportauditIdGeneratetheauditreportfp(filePath)filePathfilePatht(template)templateTemplateofAuditgetCommandStatuscommandIdgetscommandstatusci(childIndex)indexchildindexinGroupCommand(ifothercommands,willbeignore)helpcommandNameshowshelpordetailedhelphelpFiltershowsfilterhelpimportDatabaseMetadatafilePathimportsdatabasemetadataimportDelimitedMetadatafilePathimportsdelimitedmetadataimportItemssource(dir.zip)importsitemsif(itemfilter)filterExpritemfilterexpressiono(overwrite)overwriteexistingitemss(status)importthestatussl(statslogs)importstats&logsparamsinitLocalinitlocalrepositoryinitRemoteadminUrlinitremoterepositoryjavaProtocolswitchestojavaprotocolmodelistCommandlistscommandsa(all)listsallcommandsq(queue)listsqueue(waitting)commandsr(run)listsrunningcommandslistExecutionServerlists[virtual]executionserverslistItemlistsitemsif(itemfilter)filterExpritemfilterexpressionm(metadata)showitemsmetadatalistJoblistsjobslistProjectlistsavailableprojectsb(branch)ShowbranchprojectsinsvnlogoffProjectlogsofflogonProjectlogsonaprojectpn(projectname)technicalnameprojectnameul(userlogin)loginuserloginup(userpassword)passworduserpasswordgt(generatetemplates)generatetemplatesbr(branch)branchbranchpopulateAuditPopulatedataintodatabaseju(jdbcurl)jdbc_urljdbcurlfordatabasedd(dbdriver)driverthedriverofdatabasedu(dbuser)usertheuserofdatabaseup(userpassword)passworduserpasswordquitexitsetUserComponentPathSetusercomponentpathup(userComponentPath)pathusercomponentpathc(clear)cleartheusercomponentpathshowVersionshowsproductversionstartGroupstartcommandgroupo(origin)inforaddsomeorigininformationsstopGroupstopcommandgroupstopServerstopsserverf(force)dontwaitforqueuedcommandsCopyright(C)20062012Talendwww.talend.com";
		String actualResult = this.runCommand(server, port, help);
		Assert.assertEquals(expectedResult, actualResult);
		
	}	
	
}
